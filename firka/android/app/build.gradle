plugins {
    id 'com.android.application'
    id 'kotlin-android'
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id 'dev.flutter.flutter-gradle-plugin'
}

// Load keystore properties from the independent secrets folder
def keystoreProperties = new Properties()

// Automatically get the absolute path to the secrets/keystore.properties file based on the project root
def keystorePropertiesFile = new File(rootProject.projectDir, '../../secrets/keystore.properties')

if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} else {
    throw new FileNotFoundException("Keystore properties file not found at: ${keystorePropertiesFile.absolutePath}")
}

println "Keystore properties file exists: ${keystorePropertiesFile.exists()}"
println "Keystore file path: ${keystoreProperties['storeFile']}"

android {
    namespace = 'hu.qwit.firka'
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = 'hu.qwit.firka'
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23 // bump minSdk version to android 6, since isar db requires minSdk 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile']) // Path to the keystore file
            storePassword keystoreProperties['storePassword'] // Keystore password
            keyAlias keystoreProperties['keyAlias'] // Key alias
            keyPassword keystoreProperties['keyPassword'] // Key password
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release // Use the release signing config
        }
    }
}

flutter {
    source = '../..'
}